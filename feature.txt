---
- name: Bond two interfaces and revert if it fails to ping the gateway
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Get the primary interface from facts
      set_fact:
        primary_interface: "{{ ansible_default_ipv4.interface }}"
    
    - name: Gather network interfaces for the host
      ansible.builtin.debug:
        var: ansible_facts['ansible_interfaces']
    
    - name: Check if primary interface has VLAN
      shell: "ip -o link show | grep '{{ primary_interface }}' | grep -c '\.'"
      register: vlan_check
      changed_when: False

    - name: Set VLAN tag fact if a VLAN is present
      set_fact:
        vlan_tag: "{{ primary_interface.split('.')[1] }}"
      when: vlan_check.stdout | int > 0

    - name: Find the secondary interface (assume it's the next available interface)
      set_fact:
        secondary_interface: "{{ ansible_facts['ansible_interfaces'] | difference([primary_interface]) | first }}"

    - name: Create bond interface with mode LACP or active-backup
      nmcli:
        conn_name: "bond0"
        ifname: "bond0"
        type: "bond"
        mode: "{{ bond_mode }}"
        ip4: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.network }}"
        gw4: "{{ ansible_default_ipv4.gateway }}"
        state: up
      vars:
        bond_mode: lacp   # Set to either 'lacp' or 'active-backup'
      notify: restart network

    - name: Add primary interface to bond
      nmcli:
        conn_name: "{{ primary_interface }}-bond"
        ifname: "{{ primary_interface }}"
        master: bond0
        state: up

    - name: Add secondary interface to bond
      nmcli:
        conn_name: "{{ secondary_interface }}-bond"
        ifname: "{{ secondary_interface }}"
        master: bond0
        state: up

    - name: Check if VLAN needs to be bonded
      when: vlan_check.stdout | int > 0
      block:
        - name: Create VLAN on bond
          nmcli:
            conn_name: "bond0.{{ vlan_tag }}"
            ifname: "bond0.{{ vlan_tag }}"
            type: vlan
            vlan_id: "{{ vlan_tag }}"
            state: up

    - name: Test bond by pinging the gateway
      ansible.builtin.ping:
        count: 5
        dest: "{{ ansible_default_ipv4.gateway }}"
      register: ping_result
      ignore_errors: yes

    - name: Revert bond if ping fails
      when: ping_result is failed
      block:
        - name: Remove bond
          nmcli:
            conn_name: "bond0"
            state: absent
        
        - name: Remove VLAN on bond (if present)
          when: vlan_check.stdout | int > 0
          nmcli:
            conn_name: "bond0.{{ vlan_tag }}"
            state: absent

        - name: Restore original network connections
          nmcli:
            conn_name: "{{ primary_interface }}"
            state: up

        - name: Restore secondary interface
          nmcli:
            conn_name: "{{ secondary_interface }}"
            state: up

  handlers:
    - name: Restart network
      service:
        name: NetworkManager
        state: restarted
